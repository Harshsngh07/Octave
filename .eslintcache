[{"D:\\Projects\\React and Redux\\DevEd\\octave\\src\\index.js":"1","D:\\Projects\\React and Redux\\DevEd\\octave\\src\\App.js":"2","D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\Song.js":"3","D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\Player.js":"4","D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\Library.js":"5","D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\LibrarySong.js":"6","D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\Nav.js":"7","D:\\Projects\\React and Redux\\DevEd\\octave\\src\\data.js":"8","D:\\Projects\\React and Redux\\DevEd\\octave\\src\\util.js":"9"},{"size":198,"mtime":1609875600009,"results":"10","hashOfConfig":"11"},{"size":2288,"mtime":1610802757653,"results":"12","hashOfConfig":"11"},{"size":384,"mtime":1610802741531,"results":"13","hashOfConfig":"11"},{"size":3262,"mtime":1610739714634,"results":"14","hashOfConfig":"11"},{"size":789,"mtime":1610803097043,"results":"15","hashOfConfig":"11"},{"size":976,"mtime":1610735391885,"results":"16","hashOfConfig":"11"},{"size":567,"mtime":1610802920404,"results":"17","hashOfConfig":"11"},{"size":2208,"mtime":1610728596973,"results":"18","hashOfConfig":"11"},{"size":238,"mtime":1610728846117,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"jrdgf3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Projects\\React and Redux\\DevEd\\octave\\src\\index.js",[],["40","41"],"D:\\Projects\\React and Redux\\DevEd\\octave\\src\\App.js",[],"D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\Song.js",[],"D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\Player.js",["42"],"import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleRight,\r\n  faPlay,\r\n  faPause,\r\n  faAngleLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { playAudio } from \"../util.js\";\r\n\r\nconst Player = ({\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setCurrentSong,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  //handlers\r\n  useEffect(() => {\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSong);\r\n  }, [currentSong]);\r\n\r\n  const playSong = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(false);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragInput = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        playAudio(isPlaying, audioRef);\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  const animateTrack = {\r\n    transform: `translateX(${songInfo.animatePercent}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            type=\"range\"\r\n            onChange={dragInput}\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n          />\r\n          <div style={animateTrack} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSong}\r\n          className=\"pause\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\Library.js",[],"D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\LibrarySong.js",[],"D:\\Projects\\React and Redux\\DevEd\\octave\\src\\components\\Nav.js",[],"D:\\Projects\\React and Redux\\DevEd\\octave\\src\\data.js",[],"D:\\Projects\\React and Redux\\DevEd\\octave\\src\\util.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":39,"column":6,"nodeType":"49","endLine":39,"endColumn":19,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"56","text":"57"},[758,771],"[currentSong, setSongs, songs]"]